name: 'Inspec test execution'
on:
  workflow_run:
    workflows: ["EC2 Creation"]
    branches: [main]
    types: 
      - completed
env:
  INST_NAME: NewServiceAMITesting1133DEL
  REGION: us-west-2
  
jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The triggering workflow passed'
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'      

  Inspec-tests:
   # needs: provision-ec2
    runs-on: windows-latest
    steps:      
    - name: Check out code
      uses: actions/checkout@master
    
    - name: Install Inspec on runner
      run: |
        . { iwr -useb https://omnitruck.chef.io/install.ps1 } | iex; install -project inspec 
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
        aws-session-token: ${{ secrets.SESSION_TOKEN }}
        aws-region: ${{ secrets.REGION }}

    - name: Run tests
      run: |
        net start winrm
        $ID=aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=tag:Name,Values=$env:INST_NAME" --query 'Reservations[*].Instances[*].[InstanceId]' --output text
        $ID
        $IP=aws --region $env:REGION ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=instance-id,Values=$ID" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text
        $IP
        $env:Path += ';C:\opscode\inspec\bin\'
        inspec --chef-license=accept
        
        echo "Checking if WINRM-HTTPS PORT (5986) is OPEN AND LISTENING...."
        $ipaddress="$IP"
        $port = "5986"
        $connection = New-Object System.Net.Sockets.TcpClient($ipaddress, $port)
        while($true){
        if ($connection.Connected) {
        echo " Success: WINRM HTTPS PORT 5986 is OPEN and LISTENING"
        Break
        } else {
        echo " FAILURE: WINRM HTTPS PORT 5986 is NOT LISTENING. Trying again"
        sleep 5
        Continue 
        }
        }

        $SEC="Using https 5986...Testing Begins..."
        $SEC
        inspec exec .\test2.rb --host $IP --user ${{ secrets.USERNAME }} --password ${{ secrets.PASS }} --backend winrm --ssl --self-signed
