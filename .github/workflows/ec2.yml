name: 'EC2 Creation'

on:
  push:
    branches:
      - mainn
  
env:
  AMI_ID: ami-05a0729a7c3121089
  INST_TYPE: t3.medium
  KEY: GlobalLogics
  SG_ID: sg-0c8925ad61b8ede76
  SUB_ID: subnet-0b0d514911d387518
  INST_NAME: NewServiceAMITesting1133DEL
  REGION: us-west-2
          
jobs:
  deployEC2:
    runs-on: windows-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from master branch
        uses: actions/checkout@v2

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          # aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: ${{ secrets.REGION }}

          
      - name: Creating EC2
        run: |
          certutil -decode file.txt new11.txt
          aws ec2 run-instances --image-id $env:AMI_ID --count 1 --instance-type $env:INST_TYPE --key-name $env:KEY --security-group-ids $env:SG_ID --subnet-id $env:SUB_ID --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=$env:INST_NAME}]" --user-data file://new11.txt
          $ID=aws ec2 describe-instances --filters "Name=tag:Name,Values=$env:INST_NAME" --query 'Reservations[*].Instances[*].[InstanceId]' --output text
          $ID
          echo "Instance reachability checks initiated...."
          $instance_status=''
          $system_status=''     
          $slimit = (Get-Date).AddMinutes(15)
          $limit = (Get-Date).AddMinutes(16)
          echo "Instance reachability checks initiated...."
          $instance_status=''
          $system_status=''
          while ((Get-Date) -le $limit){
          #while($true){
          $instance_status=aws ec2 describe-instance-status --instance-ids $ID --query 'InstanceStatuses[*].InstanceStatus.Details[*].Status' --output text
          $system_status=aws ec2 describe-instance-status --instance-ids $ID --query 'InstanceStatuses[*].SystemStatus.Details[*].Status' --output text
          If ($instance_status -eq 'passed' -AND $system_status -eq 'passed')  {
          '2/2 checks Passed'
          echo "Check 1: Instance Status -> $instance_status"
          echo "Check 2: System Status -> $system_status"
          sleep 2
          Break
          } ElseIf ($instance_status -eq 'failed' -AND $system_status -eq 'failed')  {
          '2/2 checks Failed'
          echo "Check 1: Instance Status -> $instance_status"
          echo "Check 2: System Status -> $system_status"
          sleep 2
          Break
          } ElseIf ((Get-Date) -gt $slimit){
          echo "Instance is taking too much time to initialize. More than 15 minutes have passed since creation"
          Break
          } Else {
          'initializing'
          echo "Check 1: Instance Status -> $instance_status"
          echo "Check 2: System Status -> $system_status"
          sleep 20
          Continue 
          }
          }
